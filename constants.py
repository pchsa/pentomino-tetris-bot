from enum import Enum

# Constants for the Pentomino Tetris Bot
BOARD_WIDTH = 10
BOARD_HEIGHT = 20

INITIAL_BOARD_STATE = [[0] * BOARD_WIDTH for _ in range(BOARD_HEIGHT)]
INITIAL_X_POSITION = 4
INITIAL_Y_POSITION = BOARD_HEIGHT - 5

class Pentomino(Enum):
    I5 = 1
    V5 = 2
    T5 = 3 
    U5 = 4
    W5 = 5
    X5 = 6
    J5 = 7
    L5 = 8
    S5 = 9
    Z5 = 10
    TL = 11
    TJ = 12
    OZ = 13
    OS = 14
    TS = 15
    TZ = 16
    LL = 17
    JJ = 18

SHAPES = {
    Pentomino.I5: [
        [(0, 2), (1, 2), (2, 2), (3, 2), (4, 2)],
        [(2, 0), (2, 1), (2, 2), (2, 3), (2, 4)],
    ],
    Pentomino.V5: [
        [(0, 2), (1, 2), (2, 2), (2, 3), (2, 4)],
        [(0, 4), (0, 3), (0, 2), (1, 2), (2, 2)],
        [(0, 2), (0, 3), (0, 4), (1, 4), (2, 4)],
        [(0, 4), (1, 4), (2, 4), (2, 3), (2, 2)],
    ],
    Pentomino.T5: [
        [(1, 2), (2, 2), (2, 3), (2, 4), (3, 2)],
        [(2, 3), (2, 2), (2, 1), (3, 2), (4, 2)],
        [(1, 2), (2, 2), (2, 1), (2, 0), (3, 2)],
        [(0, 2), (1, 2), (2, 2), (2, 3), (2, 1)],
    ],
    Pentomino.U5: [
        [(0, 4), (0, 3), (1, 3), (2, 3), (2, 4)],
        [(2, 4), (1, 4), (1, 3), (1, 2), (2, 2)],
        [(0, 2), (0, 3), (1, 3), (2, 3), (2, 2)],
        [(0, 4), (1, 4), (1, 3), (1, 2), (0, 2)],
    ],
    Pentomino.W5: [
        [(0, 2), (1, 2), (1, 3), (2, 3), (2, 4)],
        [(0, 4), (0, 3), (1, 3), (1, 2), (2, 2)],
        [(0, 2), (0, 3), (1, 3), (1, 4), (2, 4)],
        [(0, 4), (1, 4), (1, 3), (2, 3), (2, 2)],
    ],
    Pentomino.X5: [
        [(0, 3), (1, 3), (2, 3), (1, 4), (1, 2)],
    ],
    Pentomino.J5: [
        [(1, 3), (1, 2), (2, 2), (3, 2), (4, 2)],
        [(2, 0), (2, 1), (2, 2), (2, 3), (3, 3)],
        [(0, 2), (1, 2), (2, 2), (3, 2), (3, 1)],
        [(1, 1), (2, 1), (2, 2), (2, 3), (2, 4)],
    ],
    Pentomino.L5: [
        [(0, 2), (1, 2), (2, 2), (3, 2), (3, 3)],
        [(2, 4), (2, 3), (2, 2), (2, 1), (3, 1)],
        [(1, 1), (1, 2), (2, 2), (3, 2), (4, 2)],
        [(1, 3), (2, 3), (2, 2), (2, 1), (2, 0)],
    ],
    Pentomino.S5: [
        [(0, 2), (1, 2), (2, 2), (2, 3), (3, 3)],
        [(2, 4), (2, 3), (2, 2), (3, 2), (3, 1)],
        [(1, 1), (2, 1), (2, 2), (3, 2), (4, 2)],
        [(1, 3), (1, 2), (2, 2), (2, 1), (2, 0)],
    ],
    Pentomino.Z5: [
        [(1, 3), (2, 3), (2, 2), (3, 2), (4, 2)],
        [(2, 0), (2, 1), (2, 2), (3, 2), (3, 3)],
        [(0, 2), (1, 2), (2, 2), (2, 1), (3, 1)],
        [(1, 1), (1, 2), (2, 2), (2, 3), (2, 4)],
    ],
    Pentomino.TL: [
        [(0, 2), (1, 2), (2, 2), (3, 2), (2, 3)],
        [(2, 4), (2, 3), (2, 2), (2, 1), (3, 2)],
        [(1, 2), (2, 2), (3, 2), (4, 2), (2, 1)],
        [(2, 3), (2, 2), (2, 1), (2, 0), (1, 2)],
    ],
    Pentomino.TJ: [
        [(1, 2), (2, 2), (3, 2), (4, 2), (2, 3)],
        [(2, 3), (2, 2), (2, 1), (2, 0), (3, 2)],
        [(0, 2), (1, 2), (2, 2), (3, 2), (2, 1)],
        [(2, 4), (2, 3), (2, 2), (2, 1), (1, 2)],
    ],
    Pentomino.OZ: [
        [(0, 4), (0, 3), (1, 4), (1, 3), (2, 3)],
        [(1, 4), (1, 3), (2, 4), (2, 3), (1, 2)],
        [(1, 3), (1, 2), (2, 3), (2, 2), (0, 3)],
        [(0, 2), (0, 3), (1, 2), (1, 3), (1, 4)],
    ],
    Pentomino.OS: [
        [(1, 4), (1, 3), (2, 4), (2, 3), (0, 3)],
        [(1, 2), (1, 3), (2, 2), (2, 3), (1, 4)],
        [(0, 2), (0, 3), (1, 2), (1, 3), (2, 3)],
        [(0, 4), (0, 3), (1, 4), (1, 3), (1, 2)],
    ],
    Pentomino.TS: [
        [(0, 3), (1, 3), (2, 3), (0, 4), (1, 2)],
        [(0, 3), (1, 3), (2, 4), (1, 4), (1, 2)],
        [(0, 3), (1, 3), (2, 3), (1, 4), (2, 2)],
        [(0, 2), (1, 3), (2, 3), (1, 4), (1, 2)],
    ],
    Pentomino.TZ: [
        [(0, 3), (1, 3), (2, 3), (2, 4), (1, 2)],
        [(0, 3), (1, 3), (2, 2), (1, 4), (1, 2)],
        [(0, 3), (1, 3), (2, 3), (1, 4), (0, 2)],
        [(0, 4), (1, 3), (2, 3), (1, 4), (1, 2)],
    ],
    Pentomino.LL: [
        [(0, 3), (1, 3), (2, 3), (2, 4), (0, 2)],
        [(0, 4), (1, 3), (2, 2), (1, 4), (1, 2)],
    ],
    Pentomino.JJ: [
        [(0, 3), (1, 3), (2, 3), (0, 4), (2, 2)],
        [(0, 2), (1, 3), (2, 4), (1, 4), (1, 2)],
    ],
}

def _calculate_valid_x_range(shape):
    min_x = min(x for x, _ in shape)
    max_x = max(x for x, _ in shape)
    
    return (-min_x, BOARD_WIDTH - max_x - 1) 

X_RANGES = {
    pentomino:[
        _calculate_valid_x_range(rotation) for rotation in SHAPES[pentomino]
    ] for pentomino in Pentomino
}
